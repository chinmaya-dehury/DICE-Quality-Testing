function MAP=map2_canon(e1,e2,e3,g2)
% from L. Bodrog, A. Heindl, G. Horvath, M. Telek:
% "A Markovian Canonical Form of Second-Order Matrix-Exponential
% Processes"

il1=(18*e1^4*e2 - 18*e1^3*e3 + 18*e2^3*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 + 1/2) + e3^2*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 + 1/2) - 9*e2^3 - e3^2 + 24*e1^3*e3*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 + 1/2) - 27*e1^2*e2^2*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 + 1/2) + 15*e1*e2*e3 - 18*e1*e2*e3*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 + 1/2))/(72*e1^5 - 90*e1^3*e2 + 6*e3*e1^2 + 27*e1*e2^2 - 3*e3*e2)
il2=-(18*e1^3*e3 - 18*e1^4*e2 + 18*e2^3*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - 1/2) + e3^2*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - 1/2) + 9*e2^3 + e3^2 + 24*e1^3*e3*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - 1/2) - 27*e1^2*e2^2*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - 1/2) - 15*e1*e2*e3 - 18*e1*e2*e3*(6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - 1/2))/(72*e1^5 - 90*e1^3*e2 + 6*e3*e1^2 + 27*e1*e2^2 - 3*e3*e2)
p= 6*e1^3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2) + (e3*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 - (9*e1*e2*(1/(24*e1^3*e3 - 27*e1^2*e2^2 - 18*e1*e2*e3 + 18*e2^3 + e3^2))^(1/2))/2 + 1/2;
l1=1/il1;
l2=1/il2;
if l1<0 | l2<0 | p<0 | p>1
    error('cannot fit the requested map')
end
a=(l1 + (l1^2 - 2*l1^2*p + l1^2*p^2 + l2^2*p^2 + 2*l1*l2*p^2 - 2*l1*l2*p - 4*g2*l1*l2*p^2 + 4*g2*l1*l2*p)^(1/2) - l1*p - l2*p)/(2*l1 - 2*l1*p);
b=g2/a;

a = 1/2*(-E2*l2^2-2*E1*l2+2+b*l2^2*E2-2*E1*l2*b+2*E1^2*l2^2)/(-1+E1*l2*b)/(-1+E1*l2), 
l1 = -2*(-1+E1*l2)/(-l2*E2+2*E1)

D0=[-l1,(1-a)*l1;0,-l2];
D1=[a*l1,0;(1-b)*l2,b*l2];
MAP={D0,D1};
end